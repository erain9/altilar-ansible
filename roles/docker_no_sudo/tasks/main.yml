---
- name: Install Docker prerequisites
  ansible.builtin.package:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
  become: true

- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: "{{ docker_apt_key_url }}"
    state: present
  become: true
  when: ansible_os_family == "Debian"

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
  become: true
  when: ansible_os_family == "Debian"

- name: Install Docker packages
  ansible.builtin.package:
    name: "{{ docker_packages }}"
    state: present
    update_cache: "{{ docker_apt_update_cache }}"
  become: true

- name: Start and enable Docker service
  ansible.builtin.service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  become: true

- name: Create docker group if it doesn't exist
  ansible.builtin.group:
    name: docker
    state: present
  become: true

- name: Add users to docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  become: true
  with_items: "{{ docker_users }}"

- name: Check if file /etc/docker/daemon.json exists
  ansible.builtin.stat:
    path: /etc/docker/daemon.json
  register: docker_daemon_file
  become: true

- name: Create /etc/docker directory if it doesn't exist
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    mode: '0755'
  become: true
  when: not docker_daemon_file.stat.exists

- name: Configure Docker daemon
  ansible.builtin.copy:
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        }
      }
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: '0644'
  become: true
  register: docker_daemon_config
  when: not docker_daemon_file.stat.exists

- name: Restart Docker service if daemon.json changed
  ansible.builtin.service:
    name: docker
    state: restarted
  become: true
  when: docker_daemon_config is changed

- name: Check Docker installation
  ansible.builtin.command: docker --version
  register: docker_version
  changed_when: false

- name: Check Docker Compose installation
  ansible.builtin.command: docker compose version
  register: docker_compose_version
  changed_when: false

- name: Display Docker versions
  ansible.builtin.debug:
    msg:
      - "Docker: {{ docker_version.stdout }}"
      - "Docker Compose: {{ docker_compose_version.stdout }}" 